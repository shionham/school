package meachu;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Scanner;
import java.util.Set;

public class meachu {

	public static void main(String[] args) {
		
		List<backend> backendList = new ArrayList<>();
		File[] backendFiles = new File(".").listFiles((dir, name) -> name.matches("meachu.*\\.txt"));
		if (backendFiles != null) {
			 for (File file : backendFiles) {
			backendList.addAll(loadbackendFromFile(file));
		}
	}
	Scanner scanner = new Scanner(System.in);
    while (true) {
    	System.out.println("검색 조건을 입력하세요. 예) name 이오몽, height 159, mbti ENFP, company SOOP, ref 10000 > name");
    	String input = scanner.nextLine().trim();
    	if (input.equalsIgnoreCase("exit")) break;
    	
    	if (input.startsWith("name ")) {
    		String name = input.substring(5).trim();
    		for (backend m : backendList)
    			if (m.getname().equalsIgnoreCase(name)) m.printfull();
    		
    	} else if (input.startsWith("height ")) {
    		String height = input.substring(7).trim();
    		for (backend m : backendList)
    			if (m.getheight().equalsIgnoreCase(height)) m.printbasic();
    		
    	} else if (input.startsWith("mbti ")) {
    		String from = input.substring(5).trim();
    		Set<String> names = new HashSet<>();
    		for (backend m : backendList)
    			if (m.getmbti().equalsIgnoreCase(from)) names.add(m.getname());
    		names.forEach(n -> System.out.println("- " + n));
    		
    	} else if (input.startsWith("company ")) {
            String company = input.substring(8).trim();
            Set<String> names = new HashSet<>();
            for (backend m : backendList)
                if (m.getcompany().equalsIgnoreCase(company)) names.add(m.getname());
            names.forEach(n-> System.out.println("- " + n));
    		
    	} else if (input.startsWith("ref ")) {
    		String[] parts = input.substring(4).trim().split(" ");
    		if (parts.length == 3 && parts[2].equalsIgnoreCase("name")) {
    			
    			try {
    				long refvalue = Long.parseLong(parts[0]);
    				String operator = parts[1];
    				for (backend m : backendList)
    					if (m.isViewsMatch(refvalue, operator)) m.printbasic();
    			} catch (NumberFormatException ignored) {}
    		}
    	}
    }
}
    static List<backend> loadbackendFromFile(File file) {
		List<backend> backends = new ArrayList<>();
		
		try (BufferedReader br = new BufferedReader (new FileReader(file))) {
			String line;
			while ((line = br.readLine()) != null) {
				String[] parts = line.split(",");
				if (parts.length == 5) {
					try {
						backend m = new backend(
								parts[0],
                        		parts[1],
                        		parts[2],
                        		parts[3],
                        		Long.parseLong(parts[4].trim()));
						backends.add(m);
					} catch (NumberFormatException ignored) {}
				}
 			}
		} catch (IOException ignored) {}
		return backends;
	}
}
	


