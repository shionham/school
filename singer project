package schooltest;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Scanner;
import java.util.Set;

public class MainMusic {
	
	public static void main(String[] args) {
		
        List<Music> musicList = new ArrayList<>(); // 음악 정보를 저장할 리스트
        File[] musicFiles = new File(".").listFiles((dir, name) -> name.matches("music.*\\.txt"));
        if (musicFiles != null) {
            for (File file : musicFiles) {
                musicList.addAll(loadSongsFromFile(file));
            } 
        }

        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("검색 조건을 입력하세요 (예: Title 좋은날, Singer 아이유, Company EDAM, Year 2010, Ref 10000000 > Singer , 종료 : exit)");
            String input = scanner.nextLine().trim();
            if (input.equalsIgnoreCase("exit")) break;
            if (input.startsWith("Title ")) {
                String title = input.substring(6).trim();
                for (Music m : musicList)
                    if (m.getTitle().equalsIgnoreCase(title)) m.printBasic();
            } else if (input.startsWith("Singer ")) {
                String singer = input.substring(7).trim();
                for (Music m : musicList)
                    if (m.getSinger().equalsIgnoreCase(singer)) m.printFull();

            } else if (input.startsWith("Company ")) {
                String company = input.substring(8).trim();
                Set<String> singers = new HashSet<>();
                for (Music m : musicList)
                    if (m.getCompany().equalsIgnoreCase(company)) singers.add(m.getSinger());
                singers.forEach(s -> System.out.println("- " + s));
            } else if (input.startsWith("Year ")) {
                String year = input.substring(5).trim();
                Set<String> singers = new HashSet<>();
                for (Music m : musicList)
                    if (m.getYear().equals(year)) singers.add(m.getSinger());
                singers.forEach(s -> System.out.println("- " + s));

            } else if (input.startsWith("Ref ")) {
                String[] parts = input.substring(4).trim().split(" ");
                if (parts.length == 3 && parts[2].equalsIgnoreCase("Singer")) {
                    try {
                        long refValue = Long.parseLong(parts[0]);
                        String operator = parts[1];
                        for (Music m : musicList)
                            if (m.isViewsMatch(refValue, operator)) m.printBasic();
                    } catch (NumberFormatException ignored) {}


                } 
            } 
        }
    }

    static List<Music> loadSongsFromFile(File file) {
    	
        List<Music> songs = new ArrayList<>();
        
        
     
        try (BufferedReader br = new BufferedReader(new FileReader(file))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length == 5) {
                    try {
                        Music m = new Music(
                        		parts[0],
                        		parts[1],
                        		parts[2],
                        		parts[3],
                        		Long.parseLong(parts[4].trim()));
                        songs.add(m);
                    } catch (NumberFormatException ignored) {}
                }
            }
        } catch (IOException ignored) {}
        return songs;
    } 
}


